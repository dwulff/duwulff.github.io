s = read.table('~/Dropbox (2.0)/Work/Projects/Memory/3.2 Psychonet/network_seminar.txt')
head(s)
head(l)
e = rbind(s,l)
edgs = list(s,l,e)
ress = list()
for(i in 1:length(edgs)){
print(i)
x = edgs[[i]]
resp = dlply(x,.(sub),function(y) unique(unlist(y[,4])))
res = c()
for(j in 1:length(resp)){
res[j]=mean(resp[[j]]%in%unlist(resp[-j]))
}
ress[i] = res
}
ress = list()
for(i in 1:length(edgs)){
print(i)
x = edgs[[i]]
resp = dlply(x,.(sub),function(y) unique(unlist(y[,4])))
res = c()
for(j in 1:length(resp)){
res[j]=mean(resp[[j]]%in%unlist(resp[-j]))
}
ress[[i]] = res
}
ress
require(plyr)
ress = list()
for(i in 1:length(edgs)){
print(i)
x = edgs[[i]]
resp = dlply(x,.(group,sub),function(y) unique(unlist(y[,4])))
res = c()
for(j in 1:length(resp)){
res[j]=mean(resp[[j]]%in%unlist(resp[-j]))
}
ress[[i]] = res
}
ress
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(.2,.7))
mtext(1:29,las=1)
mtext(1:29,las=1,side=1,at=1:29)
mtext(seq(.2,.7,.05),side=2,at=seq(.2,.7,.05))
mtext(seq(.2,.7,.05),side=2,at=seq(.2,.7,.05),las=1)
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(.2,.7))
mtext(1:29,side=1,at=1:29)
mtext(seq(.2,.7,.05),side=2,at=seq(.2,.7,.05),las=1)
lines(1:10,ress,col='steelblue')
lines(1:10,ress[[1]],col='steelblue')
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(.2,.7,.05),side=2,at=seq(.2,.7,.05),las=1)
lines(1:10,ress[[1]],col='steelblue')
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
lines(1:10,ress[[1]],col='steelblue')
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]],col='grey25')
x = s
resp = dlply(x,.(group,sub),function(y) unique(unlist(y[,4])))
a= resp[[1]]
x =
e
resp = dlply(x,.(group,sub),function(y) unique(unlist(y[,4])))
a
resp[[1]]
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25',bty='n'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25',bty='n'),legend=c('seminar','lecture','all'))
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least one other participant'))
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least one other participant'),side=c(1,2))
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least one other participant'),side=c(1,2),lines=c(2,2))
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least one other participant'),side=c(1,2),line=c(2,2))
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(2,2),cex=1.2)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(2,1.5),cex=1.2)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(2,1.6),cex=1.2)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(1.5,1.6),cex=1.2)
lines(1:10,ress[[1]],col='steelblue')
lines(11:29,ress[[2]],col='yellow3')
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25')
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(1.5,1.6),cex=1.2)
lines(1:10,ress[[1]],col='steelblue',lwd=3)
lines(11:29,ress[[2]],col='yellow3',lwd=3)
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25',lwd=3)
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(1.5,1.6),cex=1.2)
lines(1:10,ress[[1]],col='steelblue',lwd=2)
lines(11:29,ress[[2]],col='yellow3',lwd=2)
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25',lwd=2)
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
pdf('~/Dropbox (2.0)/Work/Projects/Memory/3.2 Psychonet/risknet_overlap.pdf',width=7,height=4)
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(1.5,1.6),cex=1.2)
lines(1:10,ress[[1]],col='steelblue',lwd=2)
lines(11:29,ress[[2]],col='yellow3',lwd=2)
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25',lwd=2)
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
dev.off()
pdf('~/Dropbox (2.0)/Work/Projects/Memory/3.2 Psychonet/risknet_overlap.pdf',width=8,height=4)
plot.new();plot.window(xlim=c(.5,29.5),ylim=c(0,1))
mtext(1:29,side=1,at=1:29)
mtext(seq(0,1,.1),side=2,at=seq(0,1,.1),las=1)
mtext(c('Participant','Proportion responses given by at least\none other participant'),side=c(1,2),line=c(1.5,1.6),cex=1.2)
lines(1:10,ress[[1]],col='steelblue',lwd=2)
lines(11:29,ress[[2]],col='yellow3',lwd=2)
lines(1:29,ress[[3]][c(20:29,1:19)],col='grey25',lwd=2)
legend('top',lwd=2,col=c('steelblue','yellow3','grey25'),cex=1.2,bty='n',legend=c('seminar','lecture','all'))
dev.off()
head(l)
head(s)
head(l)
head(a)
a = read.csv('~/Downloads/data_project_616668_2016_10_18.csv',sep=';')
head(a)
names(a)
a$duration
sel = apply(resp,1,function(x) mean(is.na(x))) == 0
a = read.csv('~/Downloads/data_project_616668_2016_10_18.csv',sep=';')
resp = a[,grepl('v_',names(a))]
resp[resp == -66] = NA
resp[resp == -77] = NA
resp[resp == -99] = NA
demo = resp[,31:ncol(resp)]
resp = resp[,1:30]
sel = apply(resp,1,function(x) mean(is.na(x))) == 0
resp = resp[sel,]
demo = demo[sel,]
a$duration[sel]
summary(a$duration[sel])
hist(a$duration[sel])
hist(a$duration[sel],main='')
hist(a$duration[sel],main='',xlab='duration in s')
hist(a$duration[sel],main='',xlab='Duration in s')
hist(a$duration[sel],main='',xlab='Duration in s',breaks=100)
hist(a$duration[sel],main='',xlab='Duration in s',breaks=20)
hist(a$duration[sel],main='',xlab='Duration in s',breaks=20,xlim=c(0,5000))
abline(v=median(a$duration[sel]),lty=3)
text(a$duration[sel]+100,8,labels='median')
text(median(a$duration[sel]+100),8,labels='median')
hist(a$duration[sel],main='',xlab='Duration in s',breaks=20,xlim=c(0,5000))
abline(v=median(a$duration[sel]),lty=3)
text(median(a$duration[sel]+100),8,labels='median')
text(median(a$duration[sel]+100),8,adj=0,labels='median')
hist(a$duration[sel],main='',xlab='Duration in s',breaks=20,xlim=c(0,5000))
abline(v=median(a$duration[sel]),lty=3)
text(median(a$duration[sel]+100),8,adj=0,labels='median')
text(median(a$duration[sel]+70),8,adj=0,labels='median')
text(median(a$duration[sel]+20),8,adj=0,labels='median')
hist(a$duration[sel],main='',xlab='Duration in s',breaks=20,xlim=c(0,5000))
abline(v=median(a$duration[sel]),lty=3)
text(median(a$duration[sel]+30),8,adj=0,labels='median')
summary(a$duration[sel])
430.0/60
source('~/Dropbox (2.0)/Work/Teaching/2016 winter/Netzwerke in der Psychologie/Risknet.R', echo=TRUE)
network_plot(data$edg,col=col1)
PASSWORD = 'networksarecool'
# ---- load packages
if(!require(igraph)) install.packages('igraph') ; require(devtools)
if(!require(devtools)) install.packages('devtools') ; require(igraph)
if(!require(cryptR)) install_git('https://github.com/dwulff/cryptR') ; require(cryptR)
package?igraph
# ---- read and decryp data
load(url('https://raw.githubusercontent.com/dwulff/dwulff.github.io/master/_Networks/Downloads/psychonet.RData'))
data = decrypt(data,PASSWORD)
# ---- plot function
network_plot = function(edges,col,cnt,category=T){
g = graph_from_data_frame(edges,directed=F)
v = get.vertex.attribute(g)$name
#l = layout_with_fr(g)
l = layout_with_kk(g)
l = layout_with_dh(g)
plot.new();plot.window(c(min(l[,1]),max(l[,1])),c(min(l[,2]),max(l[,2])))
sapply(1:nrow(tab),function(x){
is = c(which(v==tab[x,1]),which(v==tab[x,2]))
lines(c(l[is[1],1],l[is[2],1]),c(l[is[1],2],l[is[2],2]),lwd=tab[x,3]**1.5-.3,lty=1,col='grey50')
})
for(i in 1:length(v)){
points(l[i,1]+.04,l[i,2]-.04,cex=cnt[v[i]]**.7,pch=16,col='grey50')
points(l[i,1],l[i,2],cex=cnt[v[i]]**.7,pch=16,col=ifelse(category,col[1],col[2]))
}
for(i in 1:length(v)){
text(l[i,1],l[i,2],labels=v[i],cex=cnt[v[i]]**.05-.4)
}
}
# ----- plot
col1 = rgb(224,238,212,maxColorValue = 255)
col2 = rgb(220,207,232,maxColorValue = 255)
network_plot(data$edg,col=col1)
network_plot(data$edg,col=col1,data$cnt)
data
edges=data$edg
g = graph_from_data_frame(edges,directed=F)
v = get.vertex.attribute(g)$name
#l = layout_with_fr(g)
l = layout_with_kk(g)
l = layout_with_dh(g)
plot.new();plot.window(c(min(l[,1]),max(l[,1])),c(min(l[,2]),max(l[,2])))
sapply(1:nrow(tab),function(x){
is = c(which(v==tab[x,1]),which(v==tab[x,2]))
lines(c(l[is[1],1],l[is[2],1]),c(l[is[1],2],l[is[2],2]),lwd=tab[x,3]**1.5-.3,lty=1,col='grey50')
})
l
network_plot = function(edges,col,cnt,category=T){
g = graph_from_data_frame(edges,directed=F)
v = get.vertex.attribute(g)$name
#l = layout_with_fr(g)
l = layout_with_kk(g)
l = layout_with_dh(g)
plot.new();plot.window(c(min(l[,1]),max(l[,1])),c(min(l[,2]),max(l[,2])))
sapply(1:nrow(edges),function(x){
is = c(which(v==edges[x,1]),which(v==edges[x,2]))
lines(c(l[is[1],1],l[is[2],1]),c(l[is[1],2],l[is[2],2]),lwd=edges[x,3]**1.5-.3,lty=1,col='grey50')
})
for(i in 1:length(v)){
points(l[i,1]+.04,l[i,2]-.04,cex=cnt[v[i]]**.7,pch=16,col='grey50')
points(l[i,1],l[i,2],cex=cnt[v[i]]**.7,pch=16,col=ifelse(category,col[1],col[2]))
}
for(i in 1:length(v)){
text(l[i,1],l[i,2],labels=v[i],cex=cnt[v[i]]**.05-.4)
}
}
# ----- plot
col1 = rgb(224,238,212,maxColorValue = 255)
col2 = rgb(220,207,232,maxColorValue = 255)
network_plot(data$edg,col=col1,data$cnt)
options(stringsAsFactors = F)
require(googlesheets)
gs = gs_title('The psycho network')
d = gs_read(gs)
d = data.frame(d)
gs2 = gs_title('psychnet gender')
gen = gs_read(gs2,1,col_names=F)
gen = data.frame(gen)
ano = gs_read(gs2,2,col_names=F)
ano = data.frame(ano)
mal = unique(ano[ano[,2]=='m',1])
fem = unique(ano[ano[,2]=='w',1])
gen$ano = NA
gen$ano[gen[,2]=='w'] = fem[1:sum(gen[,2]=='w')]
gen$ano[gen[,2]=='m'] = mal[1:sum(gen[,2]=='m')]
names(gen) = c('name','gender','anon')
d[,4]
actors = d[,4]
resp = d[,grepl('Vorname',names(d))]
resp[resp == 'Tehilla Mechera-Ostrovsky'] = 'Tehilla Mechera'
resp[resp == 'Julia van Ditzhuijzen'] = 'Julia von Duitzhuijzen'
resp[resp == 'Nikola Kaiser'] = 'Nicolà Kaiser'
resp[resp == 'Maximilian Kneer'] = 'Max Kneer'
resp[resp == 'Laura Babbi'] = 'Lara Babbi'
resp[resp == 'Britanny Ehemann'] = 'Brittany Ehemann'
resp[resp == 'Antonin Troendle'] = 'Antonin Tröndle'
resp[resp == 'Sebastian Naef'] = 'Sebastian Näf'
resp[resp == 'Babice van Waldenburg'] = 'Babice van Waardenburg'
resp[resp == 'Jonas Mummenthal'] = 'Jonas Mumenthaler'
resp[resp == 'Michael Vogt'] = 'Michel Vogt'
resp[resp == 'Leo Stahl'] = 'Leonard Stahl'
frq = table(unlist(resp))
frq[order(frq,decreasing=T)]
con = file('~/Dropbox (2.0)/Work/Teaching/2016 winter/Netzwerke in der Psychologie/randomnames.txt')
lin = readLines(con)
close(con)
for(i in 1:nrow(gen)){
actors[actors == gen$name[i]] = gen$anon[i]
resp[resp == gen$name[i]] = gen$anon[i]
}
edges = c()
for(i in 1:nrow(resp)){
actor = actors[i]
res = data.frame(actor,'response'=unlist(resp[i,!is.na(resp[i,])]))
res = data.frame(t(apply(res,1,function(x) x[order(x)])))
edges = rbind(edges,res)
}
rownames(edges) = NULL
tab = data.frame(table(edges))
tab[,1] = as.character(tab[,1])
tab[,2] = as.character(tab[,2])
tab = tab[tab[,3]>0,]
names(tab) = c('name_1','name_2','frq')
nams = unique(unlist(tab[,1:2]))
gens = NA
for(i in 1:length(nams)){
gens[i] = gen[gen[,3]==nams[i],2]
}
resp_v = unlist(resp)
resp_v = resp_v[!is.na(resp_v)]
cnt = table(c(actors,resp_v))
edg = tab
require(cryptR)
data = list('edg'=edg,'cnt'=cnt,'gen'=gens)
data = encrypt(data,'networksarecool')
save(data,file='~/Dropbox (2.0)/Work/Software/dwulff.github.io/_Networks/Downloads/psychonet.RData')
gen
edges
edges[edges[,1] == 'John',]
edges[edges[,2] == 'John',]
cnt
rm(list=ls())
PASSWORD = 'networksarecool'
?url
package?igraph
if(!require(devtools)) install.packages('devtools') ; require(devtools)
if(!require(igraph)) install.packages('igraph') ; require(igraph)
if(!require(cryptR)) install_git('https://github.com/dwulff/cryptR') ; require(cryptR)
?load
load(url('https://raw.githubusercontent.com/dwulff/dwulff.github.io/master/_Networks/Downloads/psychonet.RData'),verbose=T)
data
data = decrypt(data,PASSWORD)
data
str(data)
str(data)
str(data)
names(data)
head(data$edg)
unique(unlist(data$edg[,1:2]))
head(data$edg)
head(data$cnt)
head(data$gen)
g = graph_from_data_frame(data$edg,directed=F)
g
plot(g)
plot(g)
dev.off()
plot(g)
network_plot = function(edges,col,cnt,nodesize=.7,edgesize=2,category=1){
g = graph_from_data_frame(edges,directed=F)
v = get.vertex.attribute(g)$name
#l = layout_with_fr(g)
l = layout_with_dh(g)
plot.new();plot.window(c(min(l[,1]),max(l[,1])),c(min(l[,2]),max(l[,2])))
sapply(1:nrow(edges),function(x){
is = c(which(v==edges[x,1]),which(v==edges[x,2]))
lines(c(l[is[1],1],l[is[2],1]),c(l[is[1],2],l[is[2],2]),lwd=edges[x,3]**edgesize-.3,lty=1,col='grey50')
})
for(i in 1:length(v)){
points(l[i,1]+.04,l[i,2]-.04,cex=cnt[v[i]]**nodesize,pch=16,col='grey50')
points(l[i,1],l[i,2],cex=cnt[v[i]]**nodesize,pch=16,col=col[category[i]])
}
for(i in 1:length(v)){
text(l[i,1],l[i,2],labels=v[i],cex=cnt[v[i]]**.08-.4)
}
}
col1 = rgb(224,238,212,maxColorValue = 255)
col2 = rgb(220,207,232,maxColorValue = 255)
network_plot(data$edg,col=c(col1,col2),data$cnt,1.1,category = (data$gen=='w')+1)
network_plot(data$edg,col=c(col1,col2),data$cnt,1.1,category = (data$gen=='w')+1)
l = average.path.length(g)
l = average.path.length(g) ; l
diameter(g)
l = average.path.length(g) ; l ; diameter(g)
c = transitivity(g,type = 'localaverage') ; c
l_c = log(length(V(g))) / log(mean(degree(g)))
c_c = mean(degree(g)) / length(V(g))
(c / c_c) / (l / l_c)
g = graph_from_data_frame(data$edg,directed=F)
deg = centr_degree(g) ; V(g)[deg$res == max(deg$res)] ; hist(deg$res,breaks=20,main='Degree distribution',xlab='Degree')
clo = centr_clo(g) ; V(g)[clo$res == max(clo$res)] ; hist(clo$res,breaks=20,main='Degree distribution',xlab='Degree')
bet = centr_betw(g) ; V(g)[bet$res == max(bet$res)]
g = graph_from_data_frame(data$edg,directed=F)
E(g)$weight = data$edg$frq
deg_w = sapply(V(g),degree,graph=g) ; deg_w[deg_w == max(deg_w)]
clo_w = sapply(V(g),closeness,graph=g) ; clo_w[clo_w == max(clo_w)]
bet_w = sapply(V(g),betweenness,graph=g) ; bet_w[bet_w == max(bet_w)]
g = graph_from_data_frame(data$edg,directed=F)
E(g)$weight = data$edg$frq
deg_w = sapply(V(g),degree,graph=g) ; deg_w[deg_w == max(deg_w)]
clo_w = sapply(V(g),closeness,graph=g) ; clo_w[clo_w == max(clo_w)]
bet_w = sapply(V(g),betweenness,graph=g) ; bet_w[bet_w == max(bet_w)]
g = graph_from_data_frame(data$edg,directed=F)
cl = cluster_louvain(g)$membership
col = c("#69D2E7", "#A7DBD8", "#E0E4CC", "#E9B57E", "#F38630", "#FA6900")
network_plot(data$edg,col=col,data$cnt,1.1,category = cl)
options(stringsAsFactors = F)
require(googlesheets)
setwd('~/Dropbox (2.0)/Work/Software/dwulff.github.io/')
networks    = read.table('_Networks/NetworksSurveys.txt',header=F,sep='\n')[,1]
tab = paste0(networks[6],' (Antworten)')
gs = gs_title(tab)
d = gs_read(gs)
d = as.data.frame(d)
# networks
names = d[,3]
comp = unlist(d[,4:6])
crit = unlist(d[,7:9])
for(com in comp) cat(com,'\n\n')
for(cri in crit) cat(cri,'\n\n')
gs = gs_title(tab)
d = gs_read(gs)
d = as.data.frame(d)
# networks
names = d[,3]
comp = unlist(d[,4:6])
crit = unlist(d[,7:9])
for(com in comp) cat(com,'\n\n')
for(cri in crit) cat(cri,'\n\n')
gs = gs_title(tab)
d = gs_read(gs)
d = as.data.frame(d)
# networks
names = d[,3]
comp = unlist(d[,4:6])
crit = unlist(d[,7:9])
for(com in comp) cat(com,'\n\n')
for(cri in crit) cat(cri,'\n\n')
comp
comp[grepl('die Wörter gelernt',comp)]
crit[grepl('die Wörter gelernt',crit)]
tab = paste0(goodchoices[6],' (Antworten)')
goodchoices = read.table('_Goodchoices/GoodchoicesSurveys.txt',header=F,sep='\n')[,1]
tab = paste0(goodchoices[6],' (Antworten)')
gs = gs_title(tab)
d = gs_read(gs)
d = as.data.frame(d)
# networks
names = d[,3]
comp = unlist(d[,4:6])
crit = unlist(d[,7:9])
for(com in comp) cat(com,'\n\n')
for(cri in crit) cat(cri,'\n\n')
comp[grepl('die Wörter gelernt',comp)]
crit[grepl('die Wörter gelernt',crit)]
